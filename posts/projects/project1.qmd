---
title: "Project 1: Predictive Analytics for Healthcare"
categories: [Data Science, Healthcare, Predictive Analytics]
image: "images/healthcare_analytics.png"
---

## Overview

In this project, I developed a predictive analytics model to forecast patient readmissions in hospitals. The goal was to identify high-risk patients and implement early interventions to reduce readmission rates.

## Key Features

-   **Data Cleaning and Preprocessing:** Handling missing values, outliers, and data normalization.
-   **Model Development:** Using logistic regression and random forest algorithms.
-   **Model Evaluation:** Assessing model performance with metrics like accuracy, precision, recall, and ROC-AUC.

## R Code Snippet

```{r}
#| message: false
#| warning: false
# Load necessary libraries
library(dplyr)
library(caret)
library(randomForest)
```

```{r}
# Set seed for reproducibility
set.seed(123)

# Number of samples
n_samples <- 1000

# Simulate data
age <- sample(18:90, n_samples, replace = TRUE)
gender <- sample(c('Male', 'Female'), n_samples, replace = TRUE)
blood_pressure <- sample(90:180, n_samples, replace = TRUE)
cholesterol <- sample(150:300, n_samples, replace = TRUE)
diabetes <- sample(c(0, 1), n_samples, replace = TRUE, prob = c(0.85, 0.15))
heart_disease <- sample(c(0, 1), n_samples, replace = TRUE, prob = c(0.7, 0.3))
readmission <- sample(c(0, 1), n_samples, replace = TRUE, prob = c(0.8, 0.2))

# Create data frame
healthcare_data <- data.frame(
  Age = age,
  Gender = factor(gender, levels = c('Male', 'Female')),
  Blood_Pressure = blood_pressure,
  Cholesterol = cholesterol,
  Diabetes = factor(diabetes, levels = c(0, 1)),
  Heart_Disease = factor(heart_disease, levels = c(0, 1)),
  Readmission = factor(readmission, levels = c(0, 1))
)

# Display the first few rows of the data
head(healthcare_data)

# Split data into training and testing sets
set.seed(123)
trainIndex <- createDataPartition(healthcare_data$Readmission, p = 0.8, list = FALSE)
trainData <- healthcare_data[trainIndex, ]
testData <- healthcare_data[-trainIndex, ]

# Train a random forest model
rf_model <- randomForest(Readmission ~ ., data = trainData, ntree = 100)

# Evaluate the model
predictions <- predict(rf_model, testData)
confusionMatrix(predictions, testData$Readmission)
```
